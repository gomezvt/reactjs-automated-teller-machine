{"ast":null,"code":"var _jsxFileName = \"/Users/gregorygomez/Documents/reactjs-automated-teller-machine/src/components/atm-screen.js\",\n  _s = $RefreshSig$();\nimport { makeStyles } from 'tss-react/mui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles()(theme => ({\n  container: {\n    background: \"red\",\n    maxHeight: \"100%\",\n    maxWidth: \"100%\"\n  },\n  item: {\n    backgroundColor: \"red\",\n    height: \"100%\",\n    width: \"100%\"\n  }\n  // button: {\n  //   backgroundColor: theme.palette.primary.main,\n  //   color: theme.palette.primary.contrastText,\n  //   '&:hover': {\n  //     backgroundColor: theme.palette.primary.dark,\n  //   },\n  // },\n}));\nfunction DisplayScreen() {\n  _s();\n  const {\n    classes\n  } = useStyles();\n  return /*#__PURE__*/_jsxDEV(Grid2, {\n    style: {\n      background: \"yellow\",\n      justifyItems: \"center\",\n      height: \"100%\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid2, {\n      style: {\n        background: \"red\",\n        direction: \"column\",\n        alignContent: \"center\",\n        height: \"600px\",\n        width: \"600px\",\n        justifyItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid2, {\n        children: /*#__PURE__*/_jsxDEV(DisplayHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid2, {\n        children: /*#__PURE__*/_jsxDEV(DisplayScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n}\n_s(DisplayScreen, \"pLBpBp6WiWV8odSNq6A1zI9Ay/Y=\", false, function () {\n  return [useStyles];\n});\n_c = DisplayScreen;\nexport default DisplayScreen;\nvar _c;\n$RefreshReg$(_c, \"DisplayScreen\");","map":{"version":3,"names":["makeStyles","jsxDEV","_jsxDEV","useStyles","theme","container","background","maxHeight","maxWidth","item","backgroundColor","height","width","DisplayScreen","_s","classes","Grid2","style","justifyItems","children","direction","alignContent","DisplayHeader","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gregorygomez/Documents/reactjs-automated-teller-machine/src/components/atm-screen.js"],"sourcesContent":["import { makeStyles } from 'tss-react/mui';\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n      background: \"red\",\n      maxHeight: \"100%\",\n      maxWidth: \"100%\"\n    },\n    item: {\n      backgroundColor: \"red\",\n      height: \"100%\",\n      width: \"100%\"\n    },\n    // button: {\n    //   backgroundColor: theme.palette.primary.main,\n    //   color: theme.palette.primary.contrastText,\n    //   '&:hover': {\n    //     backgroundColor: theme.palette.primary.dark,\n    //   },\n    // },\n  }));\n\n\nfunction DisplayScreen() {\n    const { classes } = useStyles();\n\n    return (\n      <Grid2 style={{background: \"yellow\", justifyItems: \"center\", height: \"100%\", width: \"100%\"}}>\n        <Grid2 style={{background: \"red\", direction: \"column\", alignContent: \"center\", height: \"600px\", width: \"600px\", justifyItems: \"center\"}}>\n          <Grid2>\n            <DisplayHeader />\n          </Grid2>\n          <Grid2>\n            <DisplayScreen />\n          </Grid2>\n        </Grid2>\n      </Grid2>\n    );\n}\n\nexport default DisplayScreen;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,SAAS,GAAGH,UAAU,CAAC,CAAC,CAAEI,KAAK,KAAM;EACvCC,SAAS,EAAE;IACTC,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAE,MAAM;IACjBC,QAAQ,EAAE;EACZ,CAAC;EACDC,IAAI,EAAE;IACJC,eAAe,EAAE,KAAK;IACtBC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC,CAAC,CAAC;AAGL,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAQ,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAE/B,oBACED,OAAA,CAACc,KAAK;IAACC,KAAK,EAAE;MAACX,UAAU,EAAE,QAAQ;MAAEY,YAAY,EAAE,QAAQ;MAAEP,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAO,QAAA,eAC1FjB,OAAA,CAACc,KAAK;MAACC,KAAK,EAAE;QAACX,UAAU,EAAE,KAAK;QAAEc,SAAS,EAAE,QAAQ;QAAEC,YAAY,EAAE,QAAQ;QAAEV,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE,OAAO;QAAEM,YAAY,EAAE;MAAQ,CAAE;MAAAC,QAAA,gBACtIjB,OAAA,CAACc,KAAK;QAAAG,QAAA,eACJjB,OAAA,CAACoB,aAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACRxB,OAAA,CAACc,KAAK;QAAAG,QAAA,eACJjB,OAAA,CAACW,aAAa;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd;AAACZ,EAAA,CAfQD,aAAa;EAAA,QACEV,SAAS;AAAA;AAAAwB,EAAA,GADxBd,aAAa;AAiBtB,eAAeA,aAAa;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}