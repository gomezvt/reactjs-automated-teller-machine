{"ast":null,"code":"import { useRef } from \"react\";\n/** Like react's useMemo but with guarantee that the fn\n * won't be invoked again if deps hasn't change */\nexport function useGuaranteedMemo(fn, deps) {\n  var _a;\n  const ref = useRef();\n  if (!ref.current || deps.length !== ((_a = ref.current.prevDeps) === null || _a === void 0 ? void 0 : _a.length) || ref.current.prevDeps.map((v, i) => v === deps[i]).indexOf(false) >= 0) {\n    ref.current = {\n      \"v\": fn(),\n      \"prevDeps\": [...deps]\n    };\n  }\n  return ref.current.v;\n}","map":{"version":3,"names":["useRef","useGuaranteedMemo","fn","deps","_a","ref","current","length","prevDeps","map","v","i","indexOf"],"sources":["/Users/gregorygomez/Documents/reactjs-automated-teller-machine/node_modules/tss-react/esm/tools/useGuaranteedMemo.js"],"sourcesContent":["import { useRef } from \"react\";\n/** Like react's useMemo but with guarantee that the fn\n * won't be invoked again if deps hasn't change */\nexport function useGuaranteedMemo(fn, deps) {\n    var _a;\n    const ref = useRef();\n    if (!ref.current ||\n        deps.length !== ((_a = ref.current.prevDeps) === null || _a === void 0 ? void 0 : _a.length) ||\n        ref.current.prevDeps.map((v, i) => v === deps[i]).indexOf(false) >= 0) {\n        ref.current = {\n            \"v\": fn(),\n            \"prevDeps\": [...deps]\n        };\n    }\n    return ref.current.v;\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B;AACA;AACA,OAAO,SAASC,iBAAiBA,CAACC,EAAE,EAAEC,IAAI,EAAE;EACxC,IAAIC,EAAE;EACN,MAAMC,GAAG,GAAGL,MAAM,CAAC,CAAC;EACpB,IAAI,CAACK,GAAG,CAACC,OAAO,IACZH,IAAI,CAACI,MAAM,MAAM,CAACH,EAAE,GAAGC,GAAG,CAACC,OAAO,CAACE,QAAQ,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,MAAM,CAAC,IAC5FF,GAAG,CAACC,OAAO,CAACE,QAAQ,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,KAAKP,IAAI,CAACQ,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;IACvEP,GAAG,CAACC,OAAO,GAAG;MACV,GAAG,EAAEJ,EAAE,CAAC,CAAC;MACT,UAAU,EAAE,CAAC,GAAGC,IAAI;IACxB,CAAC;EACL;EACA,OAAOE,GAAG,CAACC,OAAO,CAACI,CAAC;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}