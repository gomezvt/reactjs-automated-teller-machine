{"ast":null,"code":"import { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(theme => ({\n  container: {\n    background: \"red\",\n    maxHeight: \"100%\",\n    maxWidth: \"100%\"\n  },\n  item: {\n    backgroundColor: \"red\",\n    height: \"100%\",\n    width: \"100%\"\n  }\n  // button: {\n  //   backgroundColor: theme.palette.primary.main,\n  //   color: theme.palette.primary.contrastText,\n  //   '&:hover': {\n  //     backgroundColor: theme.palette.primary.dark,\n  //   },\n  // },\n}));\nfunction DisplayScreen() {\n  return \"screen\";\n}\n_c = DisplayScreen;\nexport default DisplayScreen;\nvar _c;\n$RefreshReg$(_c, \"DisplayScreen\");","map":{"version":3,"names":["makeStyles","useStyles","theme","container","background","maxHeight","maxWidth","item","backgroundColor","height","width","DisplayScreen","_c","$RefreshReg$"],"sources":["/Users/gregorygomez/Documents/reactjs-automated-teller-machine/src/components/atm-screen.js"],"sourcesContent":["import { makeStyles } from 'tss-react/mui';\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n      background: \"red\",\n      maxHeight: \"100%\",\n      maxWidth: \"100%\"\n    },\n    item: {\n      backgroundColor: \"red\",\n      height: \"100%\",\n      width: \"100%\"\n    },\n    // button: {\n    //   backgroundColor: theme.palette.primary.main,\n    //   color: theme.palette.primary.contrastText,\n    //   '&:hover': {\n    //     backgroundColor: theme.palette.primary.dark,\n    //   },\n    // },\n  }));\n\n\nfunction DisplayScreen() {\n    return \"screen\"\n}\n\nexport default DisplayScreen;"],"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,MAAMC,SAAS,GAAGD,UAAU,CAAC,CAAC,CAAEE,KAAK,KAAM;EACvCC,SAAS,EAAE;IACTC,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAE,MAAM;IACjBC,QAAQ,EAAE;EACZ,CAAC;EACDC,IAAI,EAAE;IACJC,eAAe,EAAE,KAAK;IACtBC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC,CAAC,CAAC;AAGL,SAASC,aAAaA,CAAA,EAAG;EACrB,OAAO,QAAQ;AACnB;AAACC,EAAA,GAFQD,aAAa;AAItB,eAAeA,aAAa;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}