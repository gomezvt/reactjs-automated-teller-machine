{"ast":null,"code":"/* eslint-disable @typescript-eslint/ban-types */\nimport { createUseCache } from \"./makeStyles\";\nimport { createUseCssAndCx } from \"./cssAndCx\";\nimport { assert } from \"./tools/assert\";\nimport { objectFromEntries } from \"./tools/polyfills/Object.fromEntries\";\nimport { objectKeys } from \"./tools/objectKeys\";\nimport { typeGuard } from \"./tools/typeGuard\";\nimport { getDependencyArrayRef } from \"./tools/getDependencyArrayRef\";\nimport { mergeClasses } from \"./mergeClasses\";\nimport { isSSR } from \"./tools/isSSR\";\nexport function createTss(params) {\n  counter = 0;\n  nestedSelectorUsageTrackRecord.splice(0, nestedSelectorUsageTrackRecord.length);\n  const {\n    useContext,\n    usePlugin,\n    cache: cacheProvidedAtInception\n  } = params;\n  const {\n    useCache\n  } = createUseCache({\n    cacheProvidedAtInception\n  });\n  const {\n    useCssAndCx\n  } = createUseCssAndCx({\n    useCache\n  });\n  const usePluginDefault = ({\n    classes,\n    cx,\n    css\n  }) => ({\n    classes,\n    cx,\n    css\n  });\n  const tss = createTss_internal({\n    useContext,\n    useCache,\n    useCssAndCx,\n    \"usePlugin\": usePlugin !== null && usePlugin !== void 0 ? usePlugin : usePluginDefault,\n    \"name\": undefined,\n    \"doesUseNestedSelectors\": false\n  });\n  return {\n    tss\n  };\n}\nlet counter = 0;\nconst nestedSelectorUsageTrackRecord = [];\nfunction createTss_internal(params) {\n  const {\n    useContext,\n    useCache,\n    useCssAndCx,\n    usePlugin,\n    name,\n    doesUseNestedSelectors\n  } = params;\n  return {\n    \"withParams\": () => createTss_internal({\n      ...params\n    }),\n    \"withName\": nameOrWrappedName => createTss_internal({\n      ...params,\n      \"name\": typeof nameOrWrappedName !== \"object\" ? nameOrWrappedName : Object.keys(nameOrWrappedName)[0]\n    }),\n    \"withNestedSelectors\": () => createTss_internal({\n      ...params,\n      \"doesUseNestedSelectors\": true\n    }),\n    \"create\": cssObjectByRuleNameOrGetCssObjectByRuleName => {\n      // NOTE: Not isomorphic. Not guaranteed to be the same on client and server.\n      // Do not attempt to 'simplify' the code without taking this fact into account.\n      const idOfUseStyles = `x${counter++}`;\n      // NOTE: Cleanup for hot module reloading.\n      if (name !== undefined) {\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n          const wrap = nestedSelectorUsageTrackRecord.find(wrap => wrap.name === name);\n          if (wrap === undefined) {\n            break;\n          }\n          nestedSelectorUsageTrackRecord.splice(nestedSelectorUsageTrackRecord.indexOf(wrap), 1);\n        }\n      }\n      const getCssObjectByRuleName = typeof cssObjectByRuleNameOrGetCssObjectByRuleName === \"function\" ? cssObjectByRuleNameOrGetCssObjectByRuleName : () => cssObjectByRuleNameOrGetCssObjectByRuleName;\n      return function useStyles(params) {\n        var _a, _b, _c;\n        const {\n          classesOverrides,\n          ...paramsAndPluginParams\n        } = params !== null && params !== void 0 ? params : {};\n        const context = useContext();\n        const {\n          css,\n          cx\n        } = useCssAndCx();\n        const cache = useCache();\n        const getClasses = () => {\n          const refClassesCache = {};\n          // @ts-expect-error: Type safety non achievable.\n          const cssObjectByRuleName = getCssObjectByRuleName({\n            ...params,\n            ...context,\n            ...(!doesUseNestedSelectors ? {} : {\n              \"classes\": typeof Proxy === \"undefined\" ? {} : new Proxy({}, {\n                \"get\": (_target, ruleName) => {\n                  /* prettier-ignore */\n                  if (typeof ruleName === \"symbol\") {\n                    assert(false);\n                  }\n                  if (isSSR && name === undefined) {\n                    throw new Error([`tss-react: In SSR setups, in order to use nested selectors, you must also give a unique name to the useStyle function.`, `Solution: Use tss.withName(\"ComponentName\").withNestedSelectors<...>()... to set a name.`].join(\"\\n\"));\n                  }\n                  update_nested_selector_usage_track_record: {\n                    if (name === undefined) {\n                      break update_nested_selector_usage_track_record;\n                    }\n                    /* prettier-ignore */\n                    let wrap = nestedSelectorUsageTrackRecord.find(wrap => wrap.name === name && wrap.idOfUseStyles === idOfUseStyles);\n                    /* prettier-ignore */\n                    if (wrap === undefined) {\n                      /* prettier-ignore */\n                      wrap = {\n                        name,\n                        idOfUseStyles,\n                        \"nestedSelectorRuleNames\": new Set()\n                      };\n                      /* prettier-ignore */\n                      nestedSelectorUsageTrackRecord.push(wrap);\n                    }\n                    /* prettier-ignore */\n                    wrap.nestedSelectorRuleNames.add(ruleName);\n                  }\n                  detect_potential_conflicts: {\n                    if (name === undefined) {\n                      break detect_potential_conflicts;\n                    }\n                    const hasPotentialConflict = nestedSelectorUsageTrackRecord.find(wrap => wrap.name === name && wrap.idOfUseStyles !== idOfUseStyles && wrap.nestedSelectorRuleNames.has(ruleName)) !== undefined;\n                    if (!hasPotentialConflict) {\n                      break detect_potential_conflicts;\n                    }\n                    throw new Error([`tss-react: There are in your codebase two different useStyles named \"${name}\" that`, `both use use the nested selector ${ruleName}.\\n`, `This may lead to CSS class name collisions, causing nested selectors to target elements outside of the intended scope.\\n`, `Solution: Ensure each useStyles using nested selectors has a unique name.\\n`, `Use: tss.withName(\"UniqueName\").withNestedSelectors<...>()...`].join(\" \"));\n                  }\n                  /* prettier-ignore */\n                  return refClassesCache[ruleName] = `${cache.key}-${name !== undefined ? name : idOfUseStyles}-${ruleName}-ref`;\n                }\n              })\n            })\n          });\n          let classes = objectFromEntries(objectKeys(cssObjectByRuleName).map(ruleName => {\n            const cssObject = cssObjectByRuleName[ruleName];\n            if (!cssObject.label) {\n              cssObject.label = `${name !== undefined ? `${name}-` : \"\"}${ruleName}`;\n            }\n            return [ruleName, `${css(cssObject)}${typeGuard(ruleName, ruleName in refClassesCache) ? ` ${refClassesCache[ruleName]}` : \"\"}`];\n          }));\n          objectKeys(refClassesCache).forEach(ruleName => {\n            if (ruleName in classes) {\n              return;\n            }\n            classes[ruleName] = refClassesCache[ruleName];\n          });\n          classes = mergeClasses(classes, classesOverrides, cx);\n          return classes;\n        };\n        const classes = runGetClassesOrUseCache({\n          cache,\n          cssObjectByRuleNameOrGetCssObjectByRuleName,\n          \"classesOverridesRef\": getDependencyArrayRef(classesOverrides),\n          \"paramsAndPluginParamsRef\": getDependencyArrayRef(paramsAndPluginParams),\n          idOfUseStyles,\n          context,\n          getClasses\n        });\n        // @ts-expect-error: Type safety non achievable.\n        const pluginResultWrap = usePlugin({\n          classes,\n          css,\n          cx,\n          idOfUseStyles,\n          name,\n          ...context,\n          ...paramsAndPluginParams\n        });\n        return {\n          \"classes\": (_a = pluginResultWrap.classes) !== null && _a !== void 0 ? _a : classes,\n          \"css\": (_b = pluginResultWrap.css) !== null && _b !== void 0 ? _b : css,\n          \"cx\": (_c = pluginResultWrap.cx) !== null && _c !== void 0 ? _c : cx,\n          ...context\n        };\n      };\n    }\n  };\n}\nconst mapCache = new WeakMap();\nfunction runGetClassesOrUseCache(params) {\n  const {\n    cache,\n    cssObjectByRuleNameOrGetCssObjectByRuleName,\n    classesOverridesRef,\n    paramsAndPluginParamsRef,\n    idOfUseStyles,\n    context,\n    getClasses\n  } = params;\n  use_cache: {\n    const mapCache_in = mapCache.get(cache);\n    if (mapCache_in === undefined) {\n      break use_cache;\n    }\n    const mapCache_in_in = mapCache_in.get(cssObjectByRuleNameOrGetCssObjectByRuleName);\n    if (mapCache_in_in === undefined) {\n      break use_cache;\n    }\n    const mapCache_in_in_in = mapCache_in_in.get(classesOverridesRef);\n    if (mapCache_in_in_in === undefined) {\n      break use_cache;\n    }\n    const arr = mapCache_in_in_in.get(paramsAndPluginParamsRef);\n    if (arr === undefined) {\n      break use_cache;\n    }\n    const entry = arr.find(({\n      context: context_i\n    }) => {\n      if (context_i === context) {\n        return true;\n      }\n      if (objectKeys(context_i).length !== objectKeys(context).length) {\n        return false;\n      }\n      for (const key in context_i) {\n        if (getDependencyArrayRef(context_i[key]) !== getDependencyArrayRef(context[key])) {\n          return false;\n        }\n      }\n      return true;\n    });\n    if (entry === undefined) {\n      break use_cache;\n    }\n    if ((entry === null || entry === void 0 ? void 0 : entry.idOfUseStyles) !== idOfUseStyles) {\n      arr.splice(arr.indexOf(entry), 1);\n      break use_cache;\n    }\n    return entry.result;\n  }\n  const result = getClasses();\n  {\n    if (!mapCache.has(cache)) {\n      mapCache.set(cache, new WeakMap());\n    }\n    const mapCache_in = mapCache.get(cache);\n    assert(mapCache_in !== undefined);\n    if (!mapCache_in.has(cssObjectByRuleNameOrGetCssObjectByRuleName)) {\n      mapCache_in.set(cssObjectByRuleNameOrGetCssObjectByRuleName, new Map());\n    }\n    const mapCache_in_in = mapCache_in.get(cssObjectByRuleNameOrGetCssObjectByRuleName);\n    assert(mapCache_in_in !== undefined);\n    if (!mapCache_in_in.has(classesOverridesRef)) {\n      if (mapCache_in_in.size > 200) {\n        mapCache_in_in.clear();\n      }\n      mapCache_in_in.set(classesOverridesRef, new Map());\n    }\n    const mapCache_in_in_in = mapCache_in_in.get(classesOverridesRef);\n    assert(mapCache_in_in_in !== undefined);\n    if (!mapCache_in_in_in.has(paramsAndPluginParamsRef)) {\n      clear_cache: {\n        const threshold = typeof paramsAndPluginParamsRef === \"string\" ? 257 : 5;\n        if (mapCache_in_in_in.size < threshold) {\n          break clear_cache;\n        }\n        mapCache_in_in_in.clear();\n      }\n      mapCache_in_in_in.set(paramsAndPluginParamsRef, []);\n    }\n    let arr = mapCache_in_in_in.get(paramsAndPluginParamsRef);\n    assert(arr !== undefined);\n    if (arr.length > 5) {\n      arr = [];\n    }\n    arr.push({\n      idOfUseStyles,\n      context,\n      result\n    });\n  }\n  return result;\n}","map":{"version":3,"names":["createUseCache","createUseCssAndCx","assert","objectFromEntries","objectKeys","typeGuard","getDependencyArrayRef","mergeClasses","isSSR","createTss","params","counter","nestedSelectorUsageTrackRecord","splice","length","useContext","usePlugin","cache","cacheProvidedAtInception","useCache","useCssAndCx","usePluginDefault","classes","cx","css","tss","createTss_internal","undefined","name","doesUseNestedSelectors","withParams","nameOrWrappedName","Object","keys","withNestedSelectors","cssObjectByRuleNameOrGetCssObjectByRuleName","idOfUseStyles","wrap","find","indexOf","getCssObjectByRuleName","useStyles","_a","_b","_c","classesOverrides","paramsAndPluginParams","context","getClasses","refClassesCache","cssObjectByRuleName","Proxy","get","_target","ruleName","Error","join","update_nested_selector_usage_track_record","Set","push","nestedSelectorRuleNames","add","detect_potential_conflicts","hasPotentialConflict","has","key","map","cssObject","label","forEach","runGetClassesOrUseCache","pluginResultWrap","mapCache","WeakMap","classesOverridesRef","paramsAndPluginParamsRef","use_cache","mapCache_in","mapCache_in_in","mapCache_in_in_in","arr","entry","context_i","result","set","Map","size","clear","clear_cache","threshold"],"sources":["/Users/gregorygomez/Documents/reactjs-automated-teller-machine/node_modules/tss-react/esm/tss.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\nimport { createUseCache } from \"./makeStyles\";\nimport { createUseCssAndCx } from \"./cssAndCx\";\nimport { assert } from \"./tools/assert\";\nimport { objectFromEntries } from \"./tools/polyfills/Object.fromEntries\";\nimport { objectKeys } from \"./tools/objectKeys\";\nimport { typeGuard } from \"./tools/typeGuard\";\nimport { getDependencyArrayRef } from \"./tools/getDependencyArrayRef\";\nimport { mergeClasses } from \"./mergeClasses\";\nimport { isSSR } from \"./tools/isSSR\";\nexport function createTss(params) {\n    counter = 0;\n    nestedSelectorUsageTrackRecord.splice(0, nestedSelectorUsageTrackRecord.length);\n    const { useContext, usePlugin, cache: cacheProvidedAtInception } = params;\n    const { useCache } = createUseCache({ cacheProvidedAtInception });\n    const { useCssAndCx } = createUseCssAndCx({ useCache });\n    const usePluginDefault = ({ classes, cx, css }) => ({ classes, cx, css });\n    const tss = createTss_internal({\n        useContext,\n        useCache,\n        useCssAndCx,\n        \"usePlugin\": usePlugin !== null && usePlugin !== void 0 ? usePlugin : usePluginDefault,\n        \"name\": undefined,\n        \"doesUseNestedSelectors\": false\n    });\n    return { tss };\n}\nlet counter = 0;\nconst nestedSelectorUsageTrackRecord = [];\nfunction createTss_internal(params) {\n    const { useContext, useCache, useCssAndCx, usePlugin, name, doesUseNestedSelectors } = params;\n    return {\n        \"withParams\": () => createTss_internal({ ...params }),\n        \"withName\": nameOrWrappedName => createTss_internal({\n            ...params,\n            \"name\": typeof nameOrWrappedName !== \"object\"\n                ? nameOrWrappedName\n                : Object.keys(nameOrWrappedName)[0]\n        }),\n        \"withNestedSelectors\": () => createTss_internal({\n            ...params,\n            \"doesUseNestedSelectors\": true\n        }),\n        \"create\": (cssObjectByRuleNameOrGetCssObjectByRuleName) => {\n            // NOTE: Not isomorphic. Not guaranteed to be the same on client and server.\n            // Do not attempt to 'simplify' the code without taking this fact into account.\n            const idOfUseStyles = `x${counter++}`;\n            // NOTE: Cleanup for hot module reloading.\n            if (name !== undefined) {\n                // eslint-disable-next-line no-constant-condition\n                while (true) {\n                    const wrap = nestedSelectorUsageTrackRecord.find(wrap => wrap.name === name);\n                    if (wrap === undefined) {\n                        break;\n                    }\n                    nestedSelectorUsageTrackRecord.splice(nestedSelectorUsageTrackRecord.indexOf(wrap), 1);\n                }\n            }\n            const getCssObjectByRuleName = typeof cssObjectByRuleNameOrGetCssObjectByRuleName ===\n                \"function\"\n                ? cssObjectByRuleNameOrGetCssObjectByRuleName\n                : () => cssObjectByRuleNameOrGetCssObjectByRuleName;\n            return function useStyles(params) {\n                var _a, _b, _c;\n                const { classesOverrides, ...paramsAndPluginParams } = (params !== null && params !== void 0 ? params : {});\n                const context = useContext();\n                const { css, cx } = useCssAndCx();\n                const cache = useCache();\n                const getClasses = () => {\n                    const refClassesCache = {};\n                    // @ts-expect-error: Type safety non achievable.\n                    const cssObjectByRuleName = getCssObjectByRuleName({\n                        ...params,\n                        ...context,\n                        ...(!doesUseNestedSelectors\n                            ? {}\n                            : {\n                                \"classes\": typeof Proxy === \"undefined\"\n                                    ? {}\n                                    : new Proxy({}, {\n                                        \"get\": (_target, ruleName) => {\n                                            /* prettier-ignore */\n                                            if (typeof ruleName === \"symbol\") {\n                                                assert(false);\n                                            }\n                                            if (isSSR &&\n                                                name === undefined) {\n                                                throw new Error([\n                                                    `tss-react: In SSR setups, in order to use nested selectors, you must also give a unique name to the useStyle function.`,\n                                                    `Solution: Use tss.withName(\"ComponentName\").withNestedSelectors<...>()... to set a name.`\n                                                ].join(\"\\n\"));\n                                            }\n                                            update_nested_selector_usage_track_record: {\n                                                if (name === undefined) {\n                                                    break update_nested_selector_usage_track_record;\n                                                }\n                                                /* prettier-ignore */\n                                                let wrap = nestedSelectorUsageTrackRecord.find(wrap => wrap.name === name && wrap.idOfUseStyles === idOfUseStyles);\n                                                /* prettier-ignore */\n                                                if (wrap === undefined) {\n                                                    /* prettier-ignore */\n                                                    wrap = { name, idOfUseStyles, \"nestedSelectorRuleNames\": new Set() };\n                                                    /* prettier-ignore */\n                                                    nestedSelectorUsageTrackRecord.push(wrap);\n                                                }\n                                                /* prettier-ignore */\n                                                wrap.nestedSelectorRuleNames.add(ruleName);\n                                            }\n                                            detect_potential_conflicts: {\n                                                if (name === undefined) {\n                                                    break detect_potential_conflicts;\n                                                }\n                                                const hasPotentialConflict = nestedSelectorUsageTrackRecord.find(wrap => wrap.name ===\n                                                    name &&\n                                                    wrap.idOfUseStyles !==\n                                                        idOfUseStyles &&\n                                                    wrap.nestedSelectorRuleNames.has(ruleName)) !== undefined;\n                                                if (!hasPotentialConflict) {\n                                                    break detect_potential_conflicts;\n                                                }\n                                                throw new Error([\n                                                    `tss-react: There are in your codebase two different useStyles named \"${name}\" that`,\n                                                    `both use use the nested selector ${ruleName}.\\n`,\n                                                    `This may lead to CSS class name collisions, causing nested selectors to target elements outside of the intended scope.\\n`,\n                                                    `Solution: Ensure each useStyles using nested selectors has a unique name.\\n`,\n                                                    `Use: tss.withName(\"UniqueName\").withNestedSelectors<...>()...`\n                                                ].join(\" \"));\n                                            }\n                                            /* prettier-ignore */\n                                            return (refClassesCache[ruleName] = `${cache.key}-${name !== undefined ? name : idOfUseStyles}-${ruleName}-ref`);\n                                        }\n                                    })\n                            })\n                    });\n                    let classes = objectFromEntries(objectKeys(cssObjectByRuleName).map(ruleName => {\n                        const cssObject = cssObjectByRuleName[ruleName];\n                        if (!cssObject.label) {\n                            cssObject.label = `${name !== undefined ? `${name}-` : \"\"}${ruleName}`;\n                        }\n                        return [\n                            ruleName,\n                            `${css(cssObject)}${typeGuard(ruleName, ruleName in refClassesCache)\n                                ? ` ${refClassesCache[ruleName]}`\n                                : \"\"}`\n                        ];\n                    }));\n                    objectKeys(refClassesCache).forEach(ruleName => {\n                        if (ruleName in classes) {\n                            return;\n                        }\n                        classes[ruleName] =\n                            refClassesCache[ruleName];\n                    });\n                    classes = mergeClasses(classes, classesOverrides, cx);\n                    return classes;\n                };\n                const classes = runGetClassesOrUseCache({\n                    cache,\n                    cssObjectByRuleNameOrGetCssObjectByRuleName,\n                    \"classesOverridesRef\": getDependencyArrayRef(classesOverrides),\n                    \"paramsAndPluginParamsRef\": getDependencyArrayRef(paramsAndPluginParams),\n                    idOfUseStyles,\n                    context,\n                    getClasses\n                });\n                // @ts-expect-error: Type safety non achievable.\n                const pluginResultWrap = usePlugin({\n                    classes,\n                    css,\n                    cx,\n                    idOfUseStyles,\n                    name,\n                    ...context,\n                    ...paramsAndPluginParams\n                });\n                return {\n                    \"classes\": (_a = pluginResultWrap.classes) !== null && _a !== void 0 ? _a : classes,\n                    \"css\": (_b = pluginResultWrap.css) !== null && _b !== void 0 ? _b : css,\n                    \"cx\": (_c = pluginResultWrap.cx) !== null && _c !== void 0 ? _c : cx,\n                    ...context\n                };\n            };\n        }\n    };\n}\nconst mapCache = new WeakMap();\nfunction runGetClassesOrUseCache(params) {\n    const { cache, cssObjectByRuleNameOrGetCssObjectByRuleName, classesOverridesRef, paramsAndPluginParamsRef, idOfUseStyles, context, getClasses } = params;\n    use_cache: {\n        const mapCache_in = mapCache.get(cache);\n        if (mapCache_in === undefined) {\n            break use_cache;\n        }\n        const mapCache_in_in = mapCache_in.get(cssObjectByRuleNameOrGetCssObjectByRuleName);\n        if (mapCache_in_in === undefined) {\n            break use_cache;\n        }\n        const mapCache_in_in_in = mapCache_in_in.get(classesOverridesRef);\n        if (mapCache_in_in_in === undefined) {\n            break use_cache;\n        }\n        const arr = mapCache_in_in_in.get(paramsAndPluginParamsRef);\n        if (arr === undefined) {\n            break use_cache;\n        }\n        const entry = arr.find(({ context: context_i }) => {\n            if (context_i === context) {\n                return true;\n            }\n            if (objectKeys(context_i).length !== objectKeys(context).length) {\n                return false;\n            }\n            for (const key in context_i) {\n                if (getDependencyArrayRef(context_i[key]) !==\n                    getDependencyArrayRef(context[key])) {\n                    return false;\n                }\n            }\n            return true;\n        });\n        if (entry === undefined) {\n            break use_cache;\n        }\n        if ((entry === null || entry === void 0 ? void 0 : entry.idOfUseStyles) !== idOfUseStyles) {\n            arr.splice(arr.indexOf(entry), 1);\n            break use_cache;\n        }\n        return entry.result;\n    }\n    const result = getClasses();\n    {\n        if (!mapCache.has(cache)) {\n            mapCache.set(cache, new WeakMap());\n        }\n        const mapCache_in = mapCache.get(cache);\n        assert(mapCache_in !== undefined);\n        if (!mapCache_in.has(cssObjectByRuleNameOrGetCssObjectByRuleName)) {\n            mapCache_in.set(cssObjectByRuleNameOrGetCssObjectByRuleName, new Map());\n        }\n        const mapCache_in_in = mapCache_in.get(cssObjectByRuleNameOrGetCssObjectByRuleName);\n        assert(mapCache_in_in !== undefined);\n        if (!mapCache_in_in.has(classesOverridesRef)) {\n            if (mapCache_in_in.size > 200) {\n                mapCache_in_in.clear();\n            }\n            mapCache_in_in.set(classesOverridesRef, new Map());\n        }\n        const mapCache_in_in_in = mapCache_in_in.get(classesOverridesRef);\n        assert(mapCache_in_in_in !== undefined);\n        if (!mapCache_in_in_in.has(paramsAndPluginParamsRef)) {\n            clear_cache: {\n                const threshold = typeof paramsAndPluginParamsRef === \"string\" ? 257 : 5;\n                if (mapCache_in_in_in.size < threshold) {\n                    break clear_cache;\n                }\n                mapCache_in_in_in.clear();\n            }\n            mapCache_in_in_in.set(paramsAndPluginParamsRef, []);\n        }\n        let arr = mapCache_in_in_in.get(paramsAndPluginParamsRef);\n        assert(arr !== undefined);\n        if (arr.length > 5) {\n            arr = [];\n        }\n        arr.push({ idOfUseStyles, context, result });\n    }\n    return result;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}